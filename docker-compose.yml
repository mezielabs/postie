version: '3.8'

services:
  app:
    image: 'ammezie/postie:latest'
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      TZ: ${TZ}
      PORT: ${PORT}
      HOST: ${HOST}
      LOG_LEVEL: ${LOG_LEVEL}
      APP_KEY: ${APP_KEY}
      NODE_ENV: ${NODE_ENV}
      SESSION_DRIVER: ${SESSION_DRIVER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      QUEUE_REDIS_HOST: ${REDIS_HOST}
      QUEUE_REDIS_PORT: ${REDIS_PORT}
      QUEUE_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    ports:
      - '${PORT:-3333}:3333'
    # command: 'node bin/server.js'
    entrypoint: sh -c "node ace migration:run --force && node bin/server.js"

  worker:
    image: 'ammezie/postie:latest'
    depends_on:
      - app
    environment:
      TZ: ${TZ}
      PORT: ${WORKER_PORT}
      HOST: ${HOST}
      LOG_LEVEL: ${LOG_LEVEL}
      APP_KEY: ${APP_KEY}
      NODE_ENV: ${NODE_ENV}
      SESSION_DRIVER: ${SESSION_DRIVER}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      QUEUE_REDIS_HOST: ${REDIS_HOST}
      QUEUE_REDIS_PORT: ${REDIS_PORT}
      QUEUE_REDIS_PASSWORD: ${REDIS_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    ports:
      - '${WORKER_PORT:-4444}:4444'
    command: ['node', '/home/node/app/ace', 'queue:listen']

  mysql:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - '3306:3306'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "--silent"]
      interval: 5s
      timeout: 3s
      retries: 2
      start_period: 0s
    # volumes:
    #   - mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    # volumes:
    #   - redis-data:/data
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --save 20 1 --loglevel warning
    healthcheck:
      test: redis-cli ping
      interval: 5s
      retries: 10
      timeout: 2s

# volumes:
#   mysql-data:
#   redis-data:
